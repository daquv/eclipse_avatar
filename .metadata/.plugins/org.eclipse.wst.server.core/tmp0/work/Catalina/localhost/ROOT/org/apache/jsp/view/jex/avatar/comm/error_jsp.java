/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2022-04-26 01:44:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.jex.avatar.comm;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import jex.util.StringUtil;
import jex.web.util.WebCommonUtil;
import jex.exception.IJexExceptionInfo;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import jex.util.date.DateTime;
import jex.sys.JexSystem;

public final class error_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/view/jex/avatar/include/page_import_head.jsp", Long.valueOf(1650602381022L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("jex.util.StringUtil");
    _jspx_imports_classes.add("jex.util.date.DateTime");
    _jspx_imports_classes.add("jex.exception.IJexExceptionInfo");
    _jspx_imports_classes.add("java.io.BufferedReader");
    _jspx_imports_classes.add("jex.web.util.WebCommonUtil");
    _jspx_imports_classes.add("java.io.InputStreamReader");
    _jspx_imports_classes.add("jex.sys.JexSystem");
    _jspx_imports_classes.add("java.io.InputStream");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    WebCommonUtil util = WebCommonUtil.getInstace(request, response);
    Throwable tt = util.getThrowable();
    String strCode    = StringUtil.null2void(request.getParameter("code"), "500");
    String strMessage = StringUtil.null2void(request.getParameter("msg"), "프로그램 오류가 발생하였습니다.");

    if("500".equals(strCode) && tt instanceof IJexExceptionInfo) {
        IJexExceptionInfo je = (IJexExceptionInfo)tt;
        strCode    = je.getCode();
        strMessage = je.getMessage();
        
        if("SES001".equals(strCode)) {
            strMessage = "연결이 끊어졌습니다. 앱을 종료합니다.";
        }
    }

    if((tt != null)&& (tt.getMessage()!=null)){
	    if((tt.getMessage().indexOf("Session DisConnected") > 0) ||(tt.getMessage().indexOf("Session Disconnect") > 0)){
	    	strCode = "Session Disconnect";
	    }
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"utf-8\">\r\n");
      out.write("\t<meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width\">\r\n");
      out.write("\t<meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("\t<title></title>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String _CURR_DATETIME = DateTime.getInstance().getDate("yyyymmdd");
	
	if(JexSystem.getProperty("JEX.id").indexOf("_DEV") > -1){
		_CURR_DATETIME = DateTime.getInstance().getDate("yyyymmddhh24miss");
	}


      out.write("\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<meta http-equiv=\"Cache-Control\" content=\"No-Cache\" />\r\n");
      out.write("\t<meta http-equiv=\"Pragma\" content=\"No-Cache\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/css/swipper.css?");
      out.print(_CURR_DATETIME);
      out.write("\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/css/avatar.css?");
      out.print(_CURR_DATETIME);
      out.write("\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/jquery.mCustomScrollbar.css?");
      out.print(_CURR_DATETIME);
      out.write("\" />\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery-1.8.3.min.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery.picker.min.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script> \r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/swiper-bundle.min.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery-1.8.1.min.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery.inherit-1.3.2.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery.cookie.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery.modal.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery.maskedinput.min.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery-ui-1.11.0.min.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery.livequery.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery.ui.datepicker-ko.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery.mCustomScrollbar.concat.min.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/jquery.placeholder.min.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jqueryPlugin/publishing.ui.library.1.0.0.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jexPlugin/jex.core.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jexPlugin/jex.calendar.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jexPlugin/jex.div.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jexPlugin/jex.loading.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jexPlugin/jex.formatter.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jexPlugin/jex.msg.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/lib/json2.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/lib/toastr.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/lib/moment.min.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t<script src=\"/js/comm/avatar.common.js?");
      out.print(_CURR_DATETIME);
      out.write("\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<style>\r\n");
      out.write("/* \ta { -webkit-tap-highlight-color:transparent;} */\r\n");
      out.write("\t</style>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t$(window.document).on(\"contextmenu\" , function(event){return false;});\t//우클릭방지\r\n");
      out.write("\t$(window.document).on(\"selectstart\" , function(event){return false;});\t//더블클릭을 통한 선택방지\r\n");
      out.write("\t$(window.document).on(\"dragstart\"\t, function(event){return false;});\t//드래그\r\n");
      out.write("\t\r\n");
      out.write("\tfunction getUserAgent() {\r\n");
      out.write("\t\tvar agent = navigator.userAgent.toLowerCase();\r\n");
      out.write("\t\tif (agent.indexOf(\"iphone\") > -1 || agent.indexOf(\"ipad\") > -1\r\n");
      out.write("\t\t\t\t|| agent.indexOf(\"ipod\") > -1) {\r\n");
      out.write("\t\t\treturn \"ios\";\r\n");
      out.write("\t\t} else if (agent.match('android') != null) {\r\n");
      out.write("\t\t\treturn \"android\";\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\treturn \"pc\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction iWebAction(actionCode, actionData) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"iWebAction : \" + actionCode + \" ::: \" + JSON.stringify(actionData));\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar action = {\r\n");
      out.write("\t\t\t_action_code : actionCode\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tif (actionData == null || actionData == undefined) {\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\taction._action_data = actionData;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// value에 &이 들어올 경우 오류가 발생할수 있음. 오류나는 인텐트는 예외처리해야됨.(거래처이름에 \"&\"이 들어가있으면 split오류남.)\r\n");
      out.write("\t\tif(actionCode == \"openPopup\"){\r\n");
      out.write("\t\t\tvar url = actionData._url;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//if(url.indexOf(\"NE-COUNTERPARTNAME\") < 0 && url.indexOf(\"NE-FRANCHISENAME\") < 0 ){\r\n");
      out.write("\t\t\tif(url.indexOf(\"NE-COUNTERPARTNAME\") < 0){\r\n");
      out.write("\t\t\t\tif(url.indexOf(\"?\") > -1){\r\n");
      out.write("\t\t\t\t\tvar idx = url.indexOf(\"?\");\r\n");
      out.write("\t\t\t\t\tvar urlT = \"\";\r\n");
      out.write("\t\t\t\t\tvar paramT = \"\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\turlT = url.substring(0, idx);\r\n");
      out.write("\t\t\t\t\tparamT = url.substring(idx+1, url.length);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar urlParamArr = paramT.split(\"&\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar encUrl = \"\"; \r\n");
      out.write("\t\t\t\t\tfor(var i=0; i< urlParamArr.length; i++){\r\n");
      out.write("\t\t\t\t\t\tvar urlParamValArr = urlParamArr[i].split(\"=\");\r\n");
      out.write("\t\t\t\t\t\tencUrl += urlParamValArr[0]+\"=\"+encodeURIComponent(urlParamValArr[1]);\r\n");
      out.write("\t\t\t\t\t\tif(i != urlParamArr.length-1){\r\n");
      out.write("\t\t\t\t\t\t\tencUrl += \"&\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t/*\r\n");
      out.write("\t\t\t\t\tif(urlParamArr.length == 0){\r\n");
      out.write("\t\t\t\t\t\tvar urlParamValArr = paramT.split(\"=\");\r\n");
      out.write("\t\t\t\t\t\tencUrl += urlParamValArr[0]+\"=\"+encodeURIComponent(urlParamValArr[1]);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\tencUrl = urlT+\"?\"+encUrl;\r\n");
      out.write("\t\t\t\t\tactionData._url = encUrl;\r\n");
      out.write("\t\t\t\t\tconsole.log(\"encUrl :\"+encUrl);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (getUserAgent() == \"ios\") {\r\n");
      out.write("\t\t\talert(\"iWebAction:\" + JSON.stringify(action));\r\n");
      out.write("\t\t} else if (getUserAgent() == \"android\") {\r\n");
      out.write("\t\t\twindow.BrowserBridge.iWebAction(JSON.stringify(action));\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tif(actionCode == \"popup_webview\"){\r\n");
      out.write("\t\t\t\tlocation.href = actionData._url;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//Native Back 버튼 선택\r\n");
      out.write("\t/* function fn_back(){\r\n");
      out.write("\t\t//history.back();\r\n");
      out.write("\t} */\r\n");
      out.write("\t\r\n");
      out.write("\t//음성인식 결과 전달\r\n");
      out.write("\tfunction fn_voice_recog(data){\r\n");
      out.write("\t\talert(\"음성인식 결과 : \" + data);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//마이크 표시여부\r\n");
      out.write("\ttry{\r\n");
      out.write("\t\tvar _micYn = \"N\";\r\n");
      out.write("\t\tvar _micViews = \"ques_\";\r\n");
      out.write("\t\t//_micViews += \"|basic_\";\r\n");
      out.write("\t\t_micViews += \"|basic_0009_02\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar _nomicViews =  \"|ques_0001_03\";\r\n");
      out.write("\t\t_nomicViews += \"|ques_0001_04\";\r\n");
      out.write("\t\t_nomicViews += \"|ques_0001_05\";\r\n");
      out.write("\t\t_nomicViews += \"|ques_0013_02\";\r\n");
      out.write("\t\t_nomicViews += \"|ques_0001_08\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//사용 X\r\n");
      out.write("\t\t/* _micViews += \"|acct_0002_01\";_micViews += \"|tax_0003_01\";_micViews += \"|tax_0003_02\";_micViews += \"|card_0001_01\";_micViews += \"|tax_0005_01\";_micViews += \"|tax_0003_02\";_micViews += \"|card_0002_01\";_micViews += \"|tax_0006_01\";_micViews += \"|bzaq_0001_01\";_micViews += \"|bzaq_0001_02\";_micViews += \"|bzaq_0002_01\";_micViews += \"|bzaq_0002_02\"; */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(location.href.match(_micViews).index > 0){\r\n");
      out.write("\t\t\t_micYn = \"Y\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(location.href.match(\"ques_0001_03\") || location.href.match(\"ques_0001_04\") || location.href.match(\"ques_0001_05\") || location.href.match(\"ques_0013_02\") || location.href.match(\"ques_0001_08\") || location.href.match(\"ques_0001_06\") || location.href.match(\"ques_0001_07\")){\r\n");
      out.write("\t\t\t_micYn = \"N\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar _noWebAction = /(ques_0000_0[5-7]|ques_comm_10|ques_0001_09)/g;\r\n");
      out.write("\t\tif(location.href.match(_noWebAction)) {\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tiWebAction(\"fn_display_mic_button\",{\"_display_yn\":_micYn});\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}catch(e){}\r\n");
      out.write("\t\r\n");
      out.write("\t//세무사 연결 \r\n");
      out.write("\tvar chrg_nm='', chrg_tel_no='', biz_no='', seq_no='';\r\n");
      out.write("\tvar _txofList = [];\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$(document).on(\"click\", \"#modal1 .btn_both a:eq(0)\", function(){\r\n");
      out.write("\t\t\t//세무사 연결 x\r\n");
      out.write("\t\t\t$(\"#modal1\").remove();\r\n");
      out.write("\t\t\t$(\"body\").append(_modal.fn_makeModal2());\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$(document).on(\"click\", \"#modal1 .btn_both a:eq(1)\", function(){\r\n");
      out.write("\t\t\t//세무사 연결 o - tel_link_cnt \r\n");
      out.write("\t\t\t_modal.fn_updateCnt();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$(document).on(\"click\", \"#modal2 .btn_both a:eq(0)\", function(){\r\n");
      out.write("\t\t\t$(\"#modal2\").remove();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$(document).on(\"click\", \"#modal2 .btn_both a:eq(1)\", function(){\r\n");
      out.write("\t\t\tiWebAction(\"getAppData\",{\"_key\" : \"_txofInfm\", \"_call_back\" : \"fn_gettxoflist\"});\r\n");
      out.write("\t\t\tsetTimeout(function() {\r\n");
      out.write("\t\t\t\tvar reformattedTxofList = _txofList.map(function(obj){\r\n");
      out.write("\t\t\t\t\treturn obj.chrg_tel_no;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t//다른 세무사 추천\r\n");
      out.write("\t\t\t\tvar pageUrl = \"ques_comm_01.act?\";\r\n");
      out.write("\t\t\t\tvar pageParam = \"INTE_INFO={'recog_txt':'세무사 목록','recog_data':{'Intent':'NNN020','appInfo':{'TXOF_LIST':'\"+encodeURIComponent(JSON.stringify(reformattedTxofList))+\"'}}}\";\r\n");
      out.write("\t\t\t\tiWebAction(\"openPopup\",{\"_url\":pageUrl, \"_param\" : pageParam});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#modal2\").remove();\r\n");
      out.write("\t\t\t}, 500)\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction fn_app_foreground(){\r\n");
      out.write("\t\tiWebAction(\"getAppData\",{\"_key\" : \"_isPhoneCall\", \"_call_back\" : \"isPhoneCall\"});\r\n");
      out.write("\t\tiWebAction(\"getAppData\",{\"_key\" : \"_temp_txofInfm\", \"_call_back\" : \"fn_getTemp\"});\r\n");
      out.write("\t\t//iWebAction(\"getAppData\",{\"_key\" : \"_txofInfm\", \"_call_back\" : \"fn_gettxoflist\"});\r\n");
      out.write("\t\tsetTimeout(function() {\r\n");
      out.write("\t\t\tif(_isPhoneCall ===\"true\"){\r\n");
      out.write("\t\t\t\t$(\"body\").append(_modal.fn_makeModal1());\r\n");
      out.write("\t\t\t\tiWebAction(\"setAppData\",{\"_key\" : \"_isPhoneCall\", \"_value\" : \"false\"});\r\n");
      out.write("\t\t\t\tiWebAction(\"setAppData\",{\"_key\" : \"_temp_txofInfm\", \"_value\" : \"\"});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}, 750);\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction isPhoneCall(data){\r\n");
      out.write("\t\t_isPhoneCall = data;\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction fn_getTemp(data){\r\n");
      out.write("\t\t//alert('temp :: ' + decodeURIComponent(data));\r\n");
      out.write("\t\tdata = JSON.parse(decodeURIComponent(data));\r\n");
      out.write("\t\tif(Object.keys(data).length > 0){\r\n");
      out.write("\t\t\tchrg_nm\t\t = data.chrg_nm;\r\n");
      out.write("\t\t\tchrg_tel_no\t = data.chrg_tel_no;\r\n");
      out.write("\t\t\tbiz_no\t\t = data.biz_no;\r\n");
      out.write("\t\t\tseq_no\t\t = data.seq_no;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t_temp_txofInfm = data;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction fn_gettxoflist(data){\r\n");
      out.write("\t\tavatar.common.null2void(data)==\"\"?_txofList = []:_txofList = decodeURIComponent(data);\r\n");
      out.write("\t\tif(typeof(_txofList) === \"string\") _txofList=JSON.parse(_txofList);\r\n");
      out.write("\t\t_txofList.push(_temp_txofInfm);\r\n");
      out.write("\t\tiWebAction(\"setAppData\",{\"_key\" : \"_txofInfm\", \"_value\" : encodeURIComponent(JSON.stringify(_txofList))});\r\n");
      out.write("\t}\r\n");
      out.write("\tlet _modal = {\r\n");
      out.write("\t\t\tfn_makeModal1 : function() {\r\n");
      out.write("\t\t\t\tvar modal1 = ''\r\n");
      out.write("\t\t\t\tmodal1+='<div class=\"modaloverlay\" id=\"modal1\">';\r\n");
      out.write("\t\t\t\tmodal1+='\t<div class=\"lytb\"><div class=\"lytb_row\"><div class=\"lytb_td\"><div class=\"layer_style1\">';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t<div class=\"layer_po\">';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t\t<div class=\"cont\">';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t\t\t<div class=\"ic_taxAcc_connc\"></div>';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t\t\t<p class=\"lyp_tit\">';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t\t\t\t<span id=\"\">'+chrg_nm+'</span> 세무사와<br>통화 연결이 되었나요?';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t\t\t</p>';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t\t</div>';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t</div>';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t<div class=\"ly_btn_fix_botm btn_both\"><!-- 버튼이 2개인 경우 btn_both 클래스 추가 -->';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t\t<a href=\"#none\" class=\"off rows2\" id=\"modal1_off\">전화 연결<br>되지 않았어요</a>';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t\t<a href=\"#none\" id=\"modal1_on\">전화를 잘 마쳤어요</a>';\r\n");
      out.write("\t\t\t\tmodal1+='\t\t</div>';\r\n");
      out.write("\t\t\t\tmodal1+='\t</div></div></div></div>';\r\n");
      out.write("\t\t\t\tmodal1+='</div>';\r\n");
      out.write("\t\t\t\treturn modal1;\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfn_makeModal2 : function() {\r\n");
      out.write("\t\t\t\tvar modal2 = '';\r\n");
      out.write("\t\t\t\tmodal2+='<div class=\"modaloverlay\" id=\"modal2\">';\r\n");
      out.write("\t\t\t\tmodal2+='\t<div class=\"lytb\"><div class=\"lytb_row\"><div class=\"lytb_td\"><div class=\"layer_style1\">';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t<div class=\"layer_po\">';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t\t<div class=\"cont\">';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t\t\t<div class=\"ic_taxAcc_connc\"></div>';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t\t\t<p class=\"lyp_tit\">다른 세무사 연결을<br>도와드릴까요?</p>';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t\t</div>';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t</div>';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t<div class=\"ly_btn_fix_botm btn_both\"><!-- 버튼이 2개인 경우 btn_both 클래스 추가 -->';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t\t<a href=\"#none\" class=\"off\" id=\"modal2_off\">아니오</a>';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t\t<a href=\"#none\" id=\"modal2_on\">네</a>';\r\n");
      out.write("\t\t\t\tmodal2+='\t\t</div>';\r\n");
      out.write("\t\t\t\tmodal2+='\t</div></div></div></div>';\r\n");
      out.write("\t\t\t\tmodal2+='</div>';\r\n");
      out.write("\t\t\t\treturn modal2;\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfn_updateCnt : function(){\r\n");
      out.write("\t\t\t\tvar input = {};\r\n");
      out.write("\t\t\t\tinput[\"CHRG_TEL_NO\"] = chrg_tel_no;\r\n");
      out.write("\t\t\t\tinput[\"BIZ_NO\"] = biz_no;\r\n");
      out.write("\t\t\t\tinput[\"SEQ_NO\"] = seq_no;\r\n");
      out.write("\t\t\t\tavatar.common.callJexAjax(\"ques_comm_01_u003\", input, _modal.fn_callback, \"false\", \"\");\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfn_callback : function(data){\r\n");
      out.write("\t\t\t\tif(data.RSLT_CD == \"0000\"){\r\n");
      out.write("\t\t\t\t\t$(\"#modal1\").remove();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"ERROR OCCURRED. PLEASE CONTACT CUSTOMER SERVICE.\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//-----------------------TEST\r\n");
      out.write("\t\r\n");
      out.write("\t</script>");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\ttry{ iWebAction(\"changeTitle\",{\"_title\" : \"안내\", \"_type\" : \"4\"}); \t}catch(e){}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction fn_back(){\r\n");
      out.write("\t\tiWebAction(\"fn_app_finish\");\r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<!-- content -->\r\n");
      out.write("\t<div class=\"content\">\r\n");
      out.write("\t\t<div class=\"m_cont m_cont_pd\"><!-- 하단 버튼 있는경우 m_cont_pd 추가 -->\r\n");
      out.write("\t\t\t<!-- 컨텐츠 영역 -->\r\n");
      out.write("\t\t\t<div class=\"notibx_wrap type2\">\r\n");
      out.write("\t\t\t\t<div class=\"inner\">\r\n");
      out.write("\t\t\t\t\t<div class=\"ico ico4\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"noti_cn2\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(strMessage );
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- //컨텐츠 영역 -->\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 버튼영역 -->\r\n");
      out.write("\t\t<div class=\"btn_add\">\r\n");
      out.write("\t\t\t<a class=\"btn_s01\" href=\"javascript:fn_back();\">확인</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- //버튼영역 -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- //content -->\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
